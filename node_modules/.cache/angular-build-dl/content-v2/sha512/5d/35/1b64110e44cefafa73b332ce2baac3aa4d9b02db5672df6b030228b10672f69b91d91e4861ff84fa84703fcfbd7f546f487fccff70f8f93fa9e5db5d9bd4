{"version":3,"sources":["node_modules/ng2-search-filter/ng2-search-filter.js","src/app/tab2/tab2.page.html","src/app/tab2/tab2.module.ts","src/app/tab2/tab2.page.scss","src/app/tab2/tab2.page.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, NgModule, Pipe } from '@angular/core';\n\nclass Ng2SearchPipe {\n    /**\n     * @param {?} items object from array\n     * @param {?} term term's search\n     * @return {?}\n     */\n    transform(items, term) {\n        if (!term || !items)\n            return items;\n        return Ng2SearchPipe.filter(items, term);\n    }\n    /**\n     *\n     * @param {?} items List of items to filter\n     * @param {?} term  a string term to compare with every property of the list\n     *\n     * @return {?}\n     */\n    static filter(items, term) {\n        const /** @type {?} */ toCompare = term.toLowerCase();\n        /**\n         * @param {?} item\n         * @param {?} term\n         * @return {?}\n         */\n        function checkInside(item, term) {\n            for (let /** @type {?} */ property in item) {\n                if (item[property] === null || item[property] == undefined) {\n                    continue;\n                }\n                if (typeof item[property] === 'object') {\n                    if (checkInside(item[property], term)) {\n                        return true;\n                    }\n                }\n                if (item[property].toString().toLowerCase().includes(toCompare)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return items.filter(function (item) {\n            return checkInside(item, term);\n        });\n    }\n}\nNg2SearchPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'filter',\n                pure: false\n            },] },\n    { type: Injectable },\n];\n/**\n * @nocollapse\n */\nNg2SearchPipe.ctorParameters = () => [];\n\nclass Ng2SearchPipeModule {\n}\nNg2SearchPipeModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [Ng2SearchPipe],\n                exports: [Ng2SearchPipe]\n            },] },\n];\n/**\n * @nocollapse\n */\nNg2SearchPipeModule.ctorParameters = () => [];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Ng2SearchPipeModule, Ng2SearchPipe };\n//# sourceMappingURL=ng2-search-filter.js.map\n","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-title>\\r\\n      Coronavirus by Country\\r\\n    </ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content [fullscreen]=\\\"true\\\">\\r\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\r\\n    <ion-refresher-content\\r\\n            pullingIcon=\\\"arrow-dropdown\\\"\\r\\n            refreshingSpinner=\\\"circles\\\"\\r\\n            refreshingText=\\\"Refreshing...\\\"\\r\\n            close-duration=\\\"2000ms\\\">\\r\\n    </ion-refresher-content>\\r\\n  </ion-refresher>\\r\\n    <ion-searchbar [(ngModel)]=\\\"searchCountry\\\" autocomplete=\\\"off\\\"  position=\\\"fixed\\\"></ion-searchbar>\\r\\n  <ion-card *ngFor=\\\"let i of info | filter:searchCountry\\\" (click)=\\\"presentModal(i?.country,i?.cases,i?.deaths, i?.recovered)\\\">\\r\\n    <ion-card-header>\\r\\n      <ion-card-title>{{ i?.country }} <span class=\\\"ion-float-right\\\"><ion-text color=\\\"danger\\\">Cases: </ion-text>{{ i?.cases | number }}</span></ion-card-title>\\r\\n    </ion-card-header>\\r\\n\\r\\n    <ion-card-content>\\r\\n      <p><ion-text color=\\\"primary\\\">Active: </ion-text>{{ i?.active | number}}</p>\\r\\n      <p><ion-text color=\\\"danger\\\">Today Cases: </ion-text>{{i?.todayCases | number}}</p>\\r\\n      <p>Deaths: {{ i?.deaths | number }} | Today Deaths: {{i?.todayDeaths | number}}</p>\\r\\n      <p><ion-text color=\\\"success\\\">Recovered: </ion-text>{{ i?.recovered | number }} | <ion-text color=\\\"success\\\">Critical: </ion-text>{{i?.critical | number}}</p>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n</ion-content>\\r\\n\"","import { IonicModule } from '@ionic/angular';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Tab2Page } from './tab2.page';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    Ng2SearchPipeModule,\r\n    RouterModule.forChild([{ path: '', component: Tab2Page }])\r\n  ],\r\n  declarations: [Tab2Page]\r\n})\r\nexport class Tab2PageModule {}\r\n","export default \"ion-content ion-toolbar {\\n  --background: translucent;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFiMi9EOlxcRGV2XFxpb25pY0FwcFxcY29yb25hdmlydXMtMy9zcmNcXGFwcFxcdGFiMlxcdGFiMi5wYWdlLnNjc3MiLCJzcmMvYXBwL3RhYjIvdGFiMi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx5QkFBQTtBQ0NGIiwiZmlsZSI6InNyYy9hcHAvdGFiMi90YWIyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jb250ZW50IGlvbi10b29sYmFyIHtcclxuICAtLWJhY2tncm91bmQ6IHRyYW5zbHVjZW50O1xyXG59IiwiaW9uLWNvbnRlbnQgaW9uLXRvb2xiYXIge1xuICAtLWJhY2tncm91bmQ6IHRyYW5zbHVjZW50O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport {CoronaServService} from '../service/corona-serv.service';\r\nimport {LoadingController} from '@ionic/angular';\r\nimport {CovidService} from './covid.service';\r\nimport { ModalController } from '@ionic/angular';\r\nimport {DetailsPage} from '../details/details.page';\r\n\r\n@Component({\r\n  selector: 'app-tab2',\r\n  templateUrl: 'tab2.page.html',\r\n  styleUrls: ['tab2.page.scss']\r\n})\r\nexport class Tab2Page implements OnInit {\r\n  info: any = null;\r\n  searchCountry;\r\n  countries: any = [];\r\n  constructor(private coronaServ: CoronaServService, private loadingCtrl: LoadingController, private covidServ: CovidService, private modalController: ModalController) {}\r\n\r\n  ngOnInit(): void {\r\n    this.coronaServ.getCountries().subscribe(\r\n        data => {\r\n          this.info = data;\r\n        }\r\n    );\r\n  }\r\n\r\n  async presentLoading() {\r\n    const loading = await this.loadingCtrl.create({\r\n      message: 'Please wait...'\r\n    });\r\n    await loading.present();\r\n  }\r\n\r\n  async presentModal(id, cases, deaths, recovered) {\r\n    const modal = await this.modalController.create({\r\n      component: DetailsPage,\r\n        componentProps: {\r\n            coronaDetailConfirmed: id,\r\n          infoCases: cases,\r\n          infoDeaths: deaths,\r\n          infoRecovered: recovered\r\n        }\r\n    });\r\n    return await modal.present();\r\n  }\r\n  doRefresh(event) {\r\n    console.log('Begin async operation');\r\n\r\n    setTimeout(() => {\r\n      console.log('Async operation has ended');\r\n      event.target.complete();\r\n    }, 2000);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"tab2-tab2-module-es5.js"}